/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HashingTest } from "../HashingTest";

export class HashingTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<HashingTest> {
    return super.deploy(overrides || {}) as Promise<HashingTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashingTest {
    return super.attach(address) as HashingTest;
  }
  connect(signer: Signer): HashingTest__factory {
    return super.connect(signer) as HashingTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashingTest {
    return new Contract(address, _abi, signerOrProvider) as HashingTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_gravityId",
        type: "bytes32",
      },
    ],
    name: "ConcatHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_gravityId",
        type: "bytes32",
      },
    ],
    name: "ConcatHash2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_gravityId",
        type: "bytes32",
      },
    ],
    name: "IterativeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
    ],
    name: "JustSaveEverything",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
    ],
    name: "JustSaveEverythingAgain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCheckpoint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state_nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "state_powers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "state_validators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715dff7e11610066578063715dff7e1461011157806374df6ae414610124578063884403e214610111578063ccf0e74c14610137578063d32e81a51461014057600080fd5b80630caff28b146100985780632afbb62e146100ad5780632b939281146100dd5780636071cbd9146100fe575b600080fd5b6100ab6100a636600461068f565b610149565b005b6100c06100bb366004610703565b610197565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f06100eb366004610703565b6101c1565b6040519081526020016100d4565b6100ab61010c36600461068f565b6101e2565b6100ab61011f36600461071c565b6102b4565b6100ab61013236600461068f565b6102e3565b6100f060035481565b6100f060005481565b6040516918da1958dadc1bda5b9d60b21b90600090610174908490849087908a908a906020016107fd565b60408051601f198184030181529190528051602090910120600055505050505050565b600181815481106101a757600080fd5b6000918252602090912001546001600160a01b0316905081565b600281815481106101d157600080fd5b600091825260209091200154905081565b60408051602081018390526918da1958dadc1bda5b9d60b21b918101829052606081018490526000906080016040516020818303038152906040528051906020012090506000866040516020016102399190610840565b604051602081830303815290604052805190602001209050600086604051602001610264919061085a565b60408051808303601f190181528282528051602091820120818401969096528282019490945260608083019590955280518083039095018552608090910190525081519101206000555050505050565b82516102c7906001906020860190610493565b5081516102db9060029060208501906104f8565b506003555050565b60408051602081018390526918da1958dadc1bda5b9d60b21b9181018290526060810184905260009060800160405160208183030381529060405280519060200120905060005b86518110156104885780156103fb5785610345600183610883565b815181106103555761035561089a565b602002602001015186828151811061036f5761036f61089a565b602002602001015111156103fb5760405162461bcd60e51b815260206004820152604360248201527f56616c696461746f7220706f776572206d757374206e6f74206265206869676860448201527f6572207468616e2070726576696f75732076616c696461746f7220696e2062616064820152620e8c6d60eb1b608482015260a40160405180910390fd5b8187828151811061040e5761040e61089a565b60200260200101518783815181106104285761042861089a565b602002602001015160405160200161045c939291909283526001600160a01b03919091166020830152604082015260600190565b60405160208183030381529060405280519060200120915080600161048191906108b0565b905061032a565b506000555050505050565b8280548282559060005260206000209081019282156104e8579160200282015b828111156104e857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906104b3565b506104f4929150610533565b5090565b8280548282559060005260206000209081019282156104e8579160200282015b828111156104e8578251825591602001919060010190610518565b5b808211156104f45760008155600101610534565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561058757610587610548565b604052919050565b600067ffffffffffffffff8211156105a9576105a9610548565b5060051b60200190565b600082601f8301126105c457600080fd5b813560206105d96105d48361058f565b61055e565b82815260059290921b840181019181810190868411156105f857600080fd5b8286015b848110156106295780356001600160a01b038116811461061c5760008081fd5b83529183019183016105fc565b509695505050505050565b600082601f83011261064557600080fd5b813560206106556105d48361058f565b82815260059290921b8401810191818101908684111561067457600080fd5b8286015b848110156106295780358352918301918301610678565b600080600080608085870312156106a557600080fd5b843567ffffffffffffffff808211156106bd57600080fd5b6106c9888389016105b3565b955060208701359150808211156106df57600080fd5b506106ec87828801610634565b949794965050505060408301359260600135919050565b60006020828403121561071557600080fd5b5035919050565b60008060006060848603121561073157600080fd5b833567ffffffffffffffff8082111561074957600080fd5b610755878388016105b3565b9450602086013591508082111561076b57600080fd5b5061077886828701610634565b925050604084013590509250925092565b600081518084526020808501945080840160005b838110156107c25781516001600160a01b03168752958201959082019060010161079d565b509495945050505050565b600081518084526020808501945080840160005b838110156107c2578151875295820195908201906001016107e1565b85815284602082015283604082015260a06060820152600061082260a0830185610789565b828103608084015261083481856107cd565b98975050505050505050565b6020815260006108536020830184610789565b9392505050565b60208152600061085360208301846107cd565b634e487b7160e01b600052601160045260246000fd5b6000828210156108955761089561086d565b500390565b634e487b7160e01b600052603260045260246000fd5b600082198211156108c3576108c361086d565b50019056fea2646970667358221220a027eeb95a9a868471a6cf447fc7673a830b5bd43fa8ca8d28febb3917eaa76d64736f6c634300080a0033";
