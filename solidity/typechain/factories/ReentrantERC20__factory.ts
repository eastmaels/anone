/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ReentrantERC20 } from "../ReentrantERC20";

export class ReentrantERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _gravityAddress: string,
    overrides?: Overrides
  ): Promise<ReentrantERC20> {
    return super.deploy(
      _gravityAddress,
      overrides || {}
    ) as Promise<ReentrantERC20>;
  }
  getDeployTransaction(
    _gravityAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_gravityAddress, overrides || {});
  }
  attach(address: string): ReentrantERC20 {
    return super.attach(address) as ReentrantERC20;
  }
  connect(signer: Signer): ReentrantERC20__factory {
    return super.connect(signer) as ReentrantERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrantERC20 {
    return new Contract(address, _abi, signerOrProvider) as ReentrantERC20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gravityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161059f38038061059f83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61050c806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a9059cbb14610030575b600080fd5b61004361003e366004610249565b610057565b604051901515815260200160405180910390f35b60408051600080825260208201818152828401909352918290816100a3565b60408051606081018252600080825260208083018290529282015282526000199092019101816100765790505b50604080516000808252602082018181526101608301845260609383018481528484018590526080840185905260a0840185905260c0840183905260e08401949094526101008301829052610120830182905261014083018290529394509092909182906101426040518060a001604052806060815260200160608152602001600081526020016000815260200160006001600160a01b031681525090565b60405180610120016040528087815260200189815260200187815260200189815260200160006001600160a01b031681526020018581526020018481526020016000801b81526020018481525091506040518060a00160405280898152602001878152602001848152602001848152602001866001600160a01b0316815250905060008054906101000a90046001600160a01b03166001600160a01b0316636941db938289856040518463ffffffff1660e01b815260040161020693929190610408565b600060405180830381600087803b15801561022057600080fd5b505af1158015610234573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b6000806040838503121561025c57600080fd5b82356001600160a01b038116811461027357600080fd5b946020939093013593505050565b600081518084526020808501945080840160005b838110156102ba5781516001600160a01b031687529582019590820190600101610295565b509495945050505050565b600081518084526020808501945080840160005b838110156102ba578151875295820195908201906001016102d9565b6000815180845260005b8181101561031b576020818501810151868301820152016102ff565b8181111561032d576000602083870101525b50601f01601f19169290920160200192915050565b60006101208251818552610358828601826102c5565b915050602083015184820360208601526103728282610281565b9150506040830151848203604086015261038c82826102c5565b915050606083015184820360608601526103a68282610281565b91505060808301516103c360808601826001600160a01b03169052565b5060a083015184820360a08601526103db82826102f5565b91505060c083015160c085015260e083015160e08501526101008084015181860152508091505092915050565b60006060808352855160a082850152610425610100850182610281565b9050602080880151605f1986840301608087015261044383826102c5565b60408a81015160a0890152858b015160c089015260808b01516001600160a01b031660e08901528782038489015289518083528a850195509092509083019060005b818110156104b5578551805160ff1684528581015186850152840151848401529484019491860191600101610485565b5050868103828801526104c88189610342565b9a995050505050505050505056fea2646970667358221220e4a90e371484b434118fcf619dc980d045f943d4e4af5dae4cde624b7ef9d34764736f6c634300080a0033";
