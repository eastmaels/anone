/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SigningTest } from "../SigningTest";

export class SigningTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SigningTest> {
    return super.deploy(overrides || {}) as Promise<SigningTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SigningTest {
    return super.attach(address) as SigningTest;
  }
  connect(signer: Signer): SigningTest__factory {
    return super.connect(signer) as SigningTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SigningTest {
    return new Contract(address, _abi, signerOrProvider) as SigningTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_theHash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "checkSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610534806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639f46e9d714610030575b600080fd5b61004361003e366004610445565b610045565b005b6040805160208101829052601c60608201527f19457468657265756d205369676e6564204d6573736167653a0a333200000000608082015290810185905260009060a0016040516020818303038152906040528051906020012090506100c86040518060400160405280600681526020016539b4b3b732b960d11b815250610310565b6100d186610356565b6100f9604051806040016040528060078152602001660e8d0ca90c2e6d60cb1b815250610310565b6101028561039e565b610124604051806040016040528060018152602001603b60f91b815250610310565b6101308460ff166103e3565b610152604051806040016040528060018152602001603960f91b815250610310565b61015b8361039e565b61017d604051806040016040528060018152602001607360f81b815250610310565b6101868261039e565b6101b06040518060400160405280600981526020016832b1b932b1b7bb32b960b91b815250610310565b60408051600081526020810180835283905260ff86169181019190915260608101849052608081018390526102169060019060a0016020604051602081039080840390855afa158015610207573d6000803e3d6000fd5b50505060206040510351610356565b61023e604051806040016040528060078152602001666164647265737360c81b815250610310565b61024786610356565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561029a573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b0316146103085760405162461bcd60e51b815260206004820152601960248201527f5369676e617475726520646f6573206e6f74206d617463682e00000000000000604482015260640160405180910390fd5b505050505050565b6103538160405160240161032491906104a9565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610424565b50565b6040516001600160a01b03821660248201526103539060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610424565b610353816040516024016103b491815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b179052610424565b610353816040516024016103f991815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080600080600060a0868803121561045d57600080fd5b85356001600160a01b038116811461047457600080fd5b945060208601359350604086013560ff8116811461049157600080fd5b94979396509394606081013594506080013592915050565b600060208083528351808285015260005b818110156104d6578581018301518582016040015282016104ba565b818111156104e8576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122064f2822f34fbaaf14e666fb00fa4bba8e51c4eaa0fea67caf2691326e6e83fb164736f6c634300080a0033";
