/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SimpleLogicBatchMiddleware } from "../SimpleLogicBatchMiddleware";

export class SimpleLogicBatchMiddleware__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SimpleLogicBatchMiddleware> {
    return super.deploy(overrides || {}) as Promise<SimpleLogicBatchMiddleware>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleLogicBatchMiddleware {
    return super.attach(address) as SimpleLogicBatchMiddleware;
  }
  connect(signer: Signer): SimpleLogicBatchMiddleware__factory {
    return super.connect(signer) as SimpleLogicBatchMiddleware__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLogicBatchMiddleware {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleLogicBatchMiddleware;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_logicContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_returnData",
        type: "bytes",
      },
    ],
    name: "LogicCallEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_logicContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "logicBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610aa78061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636f1de7e714610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b61006461005f3660046107fb565b6100a0565b005b610064610216565b600054604080516001600160a01b039092168252519081900360200190f35b61006461009b3660046108d5565b61024c565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca906108f0565b60405180910390fd5b61010b604051806040016040528060158152602001746e756d626572206f66205f616d6f756e74733a257360581b81525085516102e7565b60005b845181101561020f576101606040518060400160405280600e81526020016d5472616e73666572696e6720257360901b81525086838151811061015357610153610925565b60200260200101516102e7565b6101978386838151811061017657610176610925565b6020026020010151846001600160a01b03166103309092919063ffffffff16565b60006101bc848684815181106101af576101af610925565b6020026020010151610387565b90507f082c66b5463457c7cbafaf74246bc930c6a4a72e773dba5a016311f65ec3ee8a83856001846040516101f49493929190610997565b60405180910390a15080610207816109d5565b91505061010e565b5050505050565b6000546001600160a01b031633146102405760405162461bcd60e51b81526004016100ca906108f0565b61024a60006103d0565b565b6000546001600160a01b031633146102765760405162461bcd60e51b81526004016100ca906108f0565b6001600160a01b0381166102db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b6102e4816103d0565b50565b61032c82826040516024016102fd9291906109fe565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610420565b5050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610382908490610441565b505050565b60606103c983836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610513565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000610496826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105139092919063ffffffff16565b80519091501561038257808060200190518101906104b49190610a20565b6103825760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100ca565b6060610522848460008561052a565b949350505050565b60608247101561058b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100ca565b843b6105d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100ca565b600080866001600160a01b031685876040516105f59190610a42565b60006040518083038185875af1925050503d8060008114610632576040519150601f19603f3d011682016040523d82523d6000602084013e610637565b606091505b5091509150610647828286610652565b979650505050505050565b606083156106615750816103c9565b8251156106715782518084602001fd5b8160405162461bcd60e51b81526004016100ca9190610a5e565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106ca576106ca61068b565b604052919050565b600067ffffffffffffffff8211156106ec576106ec61068b565b5060051b60200190565b6000601f838184011261070857600080fd5b8235602061071d610718836106d2565b6106a1565b82815260059290921b8501810191818101908784111561073c57600080fd5b8287015b848110156107d357803567ffffffffffffffff808211156107615760008081fd5b818a0191508a603f8301126107765760008081fd5b8582013560408282111561078c5761078c61068b565b61079d828b01601f191689016106a1565b92508183528c818386010111156107b45760008081fd5b8181850189850137506000908201870152845250918301918301610740565b50979650505050505050565b80356001600160a01b03811681146107f657600080fd5b919050565b6000806000806080858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b818701915087601f83011261083d57600080fd5b8135602061084d610718836106d2565b82815260059290921b8401810191818101908b84111561086c57600080fd5b948201945b8386101561088a57853582529482019490820190610871565b985050880135925050808211156108a057600080fd5b506108ad878288016106f6565b9350506108bc604086016107df565b91506108ca606086016107df565b905092959194509250565b6000602082840312156108e757600080fd5b6103c9826107df565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561095657818101518382015260200161093e565b83811115610965576000848401525b50505050565b6000815180845261098381602086016020860161093b565b601f01601f19169290920160200192915050565b6001600160a01b0385811682528416602082015282151560408201526080606082018190526000906109cb9083018461096b565b9695505050505050565b60006000198214156109f757634e487b7160e01b600052601160045260246000fd5b5060010190565b604081526000610a11604083018561096b565b90508260208301529392505050565b600060208284031215610a3257600080fd5b815180151581146103c957600080fd5b60008251610a5481846020870161093b565b9190910192915050565b6020815260006103c9602083018461096b56fea2646970667358221220bf128faa76d46807e48dd895babc8e96455c68d985fab90a853a6827c4ae702e64736f6c634300080a0033";
