/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestTokenBatchMiddleware } from "../TestTokenBatchMiddleware";

export class TestTokenBatchMiddleware__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestTokenBatchMiddleware> {
    return super.deploy(overrides || {}) as Promise<TestTokenBatchMiddleware>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestTokenBatchMiddleware {
    return super.attach(address) as TestTokenBatchMiddleware;
  }
  connect(signer: Signer): TestTokenBatchMiddleware__factory {
    return super.connect(signer) as TestTokenBatchMiddleware__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTokenBatchMiddleware {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestTokenBatchMiddleware;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_destinations",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "submitBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61082f8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633d5d0cf114610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b61006461005f366004610604565b6100a0565b005b610064610147565b600054604080516001600160a01b039092168252519081900360200190f35b61006461009b3660046106cd565b61017d565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca906106e8565b60405180910390fd5b60005b83518110156101415761012f8382815181106100f4576100f461071d565b602002602001015185838151811061010e5761010e61071d565b6020026020010151846001600160a01b03166102189092919063ffffffff16565b8061013981610733565b9150506100d6565b50505050565b6000546001600160a01b031633146101715760405162461bcd60e51b81526004016100ca906106e8565b61017b600061026f565b565b6000546001600160a01b031633146101a75760405162461bcd60e51b81526004016100ca906106e8565b6001600160a01b03811661020c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b6102158161026f565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261026a9084906102bf565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610314826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103919092919063ffffffff16565b80519091501561026a5780806020019051810190610332919061075c565b61026a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100ca565b60606103a084846000856103aa565b90505b9392505050565b60608247101561040b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100ca565b843b6104595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100ca565b600080866001600160a01b0316858760405161047591906107aa565b60006040518083038185875af1925050503d80600081146104b2576040519150601f19603f3d011682016040523d82523d6000602084013e6104b7565b606091505b50915091506104c78282866104d2565b979650505050505050565b606083156104e15750816103a3565b8251156104f15782518084602001fd5b8160405162461bcd60e51b81526004016100ca91906107c6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561054a5761054a61050b565b604052919050565b600067ffffffffffffffff82111561056c5761056c61050b565b5060051b60200190565b80356001600160a01b038116811461058d57600080fd5b919050565b600082601f8301126105a357600080fd5b813560206105b86105b383610552565b610521565b82815260059290921b840181019181810190868411156105d757600080fd5b8286015b848110156105f9576105ec81610576565b83529183019183016105db565b509695505050505050565b60008060006060848603121561061957600080fd5b833567ffffffffffffffff8082111561063157600080fd5b818601915086601f83011261064557600080fd5b813560206106556105b383610552565b82815260059290921b8401810191818101908a84111561067457600080fd5b948201945b8386101561069257853582529482019490820190610679565b975050870135925050808211156106a857600080fd5b506106b586828701610592565b9250506106c460408501610576565b90509250925092565b6000602082840312156106df57600080fd5b6103a382610576565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561075557634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561076e57600080fd5b815180151581146103a357600080fd5b60005b83811015610799578181015183820152602001610781565b838111156101415750506000910152565b600082516107bc81846020870161077e565b9190910192915050565b60208152600082518060208401526107e581604085016020870161077e565b601f01601f1916919091016040019291505056fea26469706673582212208268912f34c9e967552308bf6b71f6f2abdab543e6c1f349e1aa77a3084c0bf464736f6c634300080a0033";
